// Copyright AudioKit. All Rights Reserved. Revision History at http://github.com/AudioKit/AudioKit/
// This file was auto-autogenerated by scripts and templates at http://github.com/AudioKit/AudioKitDevTools/

import AVFoundation

/// AudioKit version of Apple's PeakLimiter Audio Unit
///
open class PeakLimiter: Node, Toggleable {

        fileprivate let effectAU = AVAudioUnitEffect(
    audioComponentDescription:
    AudioComponentDescription(appleEffect: kAudioUnitSubType_PeakLimiter))

    /// Attack Time (Secs) ranges from 0.001 to 0.03 (Default: 0.012)
    @Parameter public var attackTime: AUValue

    /// Decay Time (Secs) ranges from 0.001 to 0.06 (Default: 0.024)
    @Parameter public var decayTime: AUValue

    /// Pre Gain (dB) ranges from -40 to 40 (Default: 0)
    @Parameter public var preGain: AUValue

    /// Tells whether the node is processing (ie. started, playing, or active)
    public var isStarted = true

    /// Initialize the peak limiter node
    ///
    /// - parameter input: Input node to process
    /// - parameter attackTime: Attack Time (Secs) ranges from 0.001 to 0.03 (Default: 0.012)
    /// - parameter decayTime: Decay Time (Secs) ranges from 0.001 to 0.06 (Default: 0.024)
    /// - parameter preGain: Pre Gain (dB) ranges from -40 to 40 (Default: 0)
    ///
    public init(
        _ input: Node,
        attackTime: AUValue = 0.012,
        decayTime: AUValue = 0.024,
        preGain: AUValue = 0) {
        super.init(avAudioNode: effectAU)
        connections.append(input)

        self.$attackTime.associate(with: effectAU, index: 0)
        self.$decayTime.associate(with: effectAU, index: 1)
        self.$preGain.associate(with: effectAU, index: 2)

        self.attackTime = attackTime
        self.decayTime = decayTime
        self.preGain = preGain
    }

    /// Function to start, play, or activate the node, all do the same thing
    public func start() {
        effectAU.bypass = false
        isStarted = true
    }

    /// Function to stop or bypass the node, both are equivalent
    public func stop() {
        effectAU.bypass = true
        isStarted = false
    }
}
