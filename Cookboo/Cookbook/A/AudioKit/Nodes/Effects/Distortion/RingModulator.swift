// Copyright AudioKit. All Rights Reserved. Revision History at http://github.com/AudioKit/AudioKit/
// This file was auto-autogenerated by scripts and templates at http://github.com/AudioKit/AudioKitDevTools/

import AVFoundation

/// AudioKit version of Apple's RingModulator Audio Unit
///
open class RingModulator: Node, Toggleable {

    fileprivate let effectAU = AVAudioUnitEffect(
    audioComponentDescription:
    AudioComponentDescription(appleEffect: kAudioUnitSubType_Distortion))

    /// Ring Mod Freq1 (Hertz) ranges from 0.5 to 8000 (Default: 100)
    @Parameter public var ringModFreq1: AUValue

    /// Ring Mod Freq2 (Hertz) ranges from 0.5 to 8000 (Default: 100)
    @Parameter public var ringModFreq2: AUValue

    /// Ring Mod Balance (Percent) ranges from 0 to 100 (Default: 50)
    @Parameter public var ringModBalance: AUValue

    /// Final Mix (Percent) ranges from 0 to 100 (Default: 50)
    @Parameter public var finalMix: AUValue

    /// Tells whether the node is processing (ie. started, playing, or active)
    public var isStarted = true

    /// Initialize the ring modulator node
    ///
    /// - parameter input: Input node to process
    /// - parameter ringModFreq1: Ring Mod Freq1 (Hertz) ranges from 0.5 to 8000 (Default: 100)
    /// - parameter ringModFreq2: Ring Mod Freq2 (Hertz) ranges from 0.5 to 8000 (Default: 100)
    /// - parameter ringModBalance: Ring Mod Balance (Percent) ranges from 0 to 100 (Default: 50)
    /// - parameter finalMix: Final Mix (Percent) ranges from 0 to 100 (Default: 50)
    ///
    public init(
        _ input: Node,
        ringModFreq1: AUValue = 100,
        ringModFreq2: AUValue = 100,
        ringModBalance: AUValue = 50,
        finalMix: AUValue = 50) {
        super.init(avAudioNode: effectAU)
        connections.append(input)

        self.$ringModFreq1.associate(with: effectAU, index: 3)
        self.$ringModFreq2.associate(with: effectAU, index: 4)
        self.$ringModBalance.associate(with: effectAU, index: 5)
        self.$finalMix.associate(with: effectAU, index: 15)

        self.ringModFreq1 = ringModFreq1
        self.ringModFreq2 = ringModFreq2
        self.ringModBalance = ringModBalance
        self.finalMix = finalMix
    }

    /// Function to start, play, or activate the node, all do the same thing
    public func start() {
        effectAU.bypass = false
        isStarted = true
    }

    /// Function to stop or bypass the node, both are equivalent
    public func stop() {
        effectAU.bypass = true
        isStarted = false
    }
}
